!function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e){t.exports=function(t){var e=this,n="",r={el:$(document.createDocumentFragment()),debug:!1,stateChange:function(t,n){e.log("Changing state from "+t+" to "+n)},preload:function(){},postload:function(){},statePreprocess:function(t){return t},destroy:function(){e.target.empty()},eventNamespace:"sensible"};return this.log=function(t){e.debug&&console.log(t)},Object.defineProperty(this,"state",{get:function(){return n},set:function(t){var e=n;return t=this.statePreprocess(t),n=t,this.stateChange(e,t),!0},enumerable:!0}),$.extend(this,r,t),this.el.attr("sensible-component",!0),t&&t.state&&(this.state=t.state),this.onAttributeChange=function(t,n){var r={attributes:!0,attributeFilter:[t],childList:!1,subtree:!1},o=function(t,e){console.log("The "+t+" attribute was modified to ",e),n(e)};if("undefined"!=typeof MutationObserver){var i=function(n){for(var r in console.log("Attribute Modified!"),n){var i=n[r];if("attributes"==i.type&&i.attributeName==t){var u=e.el.attr(t);o(t,u)}}};new MutationObserver(i).observe(e.el[0],r)}else i=function(e){console.log("Attribute Modified IE10 style"),"attrChange"in e&&e.attrName==t&&o(e.attrName,e.newValue)},console.log("Listening for attribute modified"),e.el[0].addEventListener("DOMAttrModified",i,!1)},this.onClassChange=function(t){this.onAttributeChange("class",t)},this.go=function(t){this.state=t},this}}]);